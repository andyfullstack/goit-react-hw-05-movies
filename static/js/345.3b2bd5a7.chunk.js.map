{"version":3,"file":"static/js/345.3b2bd5a7.chunk.js","mappings":"mMAEA,MAAMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,MAAMC,EAAmBC,UAC9B,IAEE,aADmBF,EAAAA,EAAAA,GAAM,6BAADG,OAA8BJ,GAIxD,CAFE,MAAOK,GACP,MAAMA,CACR,GAGWC,EAAkBH,UAC7B,IAIE,aAHmBF,EAAAA,EAAAA,GAAM,yBAADG,OACGJ,EAAO,WAAAI,OAAUG,EAAK,wBAKnD,CAFE,MAAOF,GACP,MAAMA,CACR,GAGWG,EAAmBL,UAC9B,IACE,MAAM,KAAEM,SAAeR,EAAAA,EAAAA,IAAU,UAADG,OAAWM,EAAO,aAAAN,OAAYJ,IAC9D,OAAOS,CAGT,CAFE,MAAOJ,GACP,MAAMA,CACR,GAGWM,EAAcR,UACzB,IACE,MAAM,KAAEM,SAAeR,EAAAA,EAAAA,GAAM,UAADG,OAChBM,EAAO,qBAAAN,OAAoBJ,IAEvC,OAAOS,CAGT,CAFE,MAAOJ,GACP,MAAMA,CACR,GAGWO,EAAiBT,UAC5B,IAEE,aADmBF,EAAAA,EAAAA,GAAM,UAADG,OAAWM,EAAO,qBAAAN,OAAoBJ,GAIhE,CAFE,MAAOK,GACP,MAAMA,CACR,E,+GCjDK,MAAMQ,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAI7BC,EAAiBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oDAK1BG,EAAcL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+BAIvBK,EAAcP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6BAIvBO,EAAgBT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oDAKzBS,EAAmBX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kD,aCXxC,MAyBA,EAzBgBW,KACd,MAAMC,ECV2BC,MACjC,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChC3B,EAAO4B,IAAYD,EAAAA,EAAAA,UAAS,OAC5BE,EAASC,IAAcH,EAAAA,EAAAA,WAAS,IACjC,QAAEtB,IAAY0B,EAAAA,EAAAA,MAkBpB,OAhBAC,EAAAA,EAAAA,YAAU,KACRF,GAAW,GACNzB,GACqBP,WACxB,IACE,MAAM,KAAEM,SAAeG,EAAAA,EAAAA,IAAeF,GACtCqB,EAAWtB,EAAK6B,QAKlB,CAJE,MAAOjC,GACP4B,EAAS,yBACX,CAAC,QACCE,GAAW,EACb,GAEFI,EAAmB,GAClB,CAAC7B,IAEG,CAAEoB,UAASzB,QAAO6B,UAAS,EDZbL,GACrB,OAAoC,IAAhCD,EAAaE,QAAQU,QAAiBZ,EAAaE,SASrDW,EAAAA,EAAAA,MAAC5B,EAAgB,CAAA6B,SAAA,EACfC,EAAAA,EAAAA,KAAC1B,EAAc,CAAAyB,SAAC,aAChBC,EAAAA,EAAAA,KAACxB,EAAW,CAAAuB,SACTd,EAAaE,QAAQc,KAAIC,IAAA,IAAC,QAAEnC,EAAO,OAAEoC,EAAM,QAAEC,GAASF,EAAA,OACrDJ,EAAAA,EAAAA,MAACpB,EAAW,CAAAqB,SAAA,EACVC,EAAAA,EAAAA,KAACpB,EAAa,CAAAmB,SAAEI,KAChBH,EAAAA,EAAAA,KAAClB,EAAgB,CAAAiB,SAAEK,MAFHrC,EAGJ,UAdlBiC,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEC,UAAW,UAAWP,SAAC,2CAiBlB,C","sources":["api/api.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/helpers/useFetchFilmReviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '6737ef5101d688762393da727963265b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getAllMoviesList = async () => {\n  try {\n    const data = await axios(`/trending/all/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const data = await axios(\n      `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getAllMoviesInfo = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getCastInfo = async movieId => {\n  try {\n    const { data } = await axios(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getReviewsInfo = async movieId => {\n  try {\n    const data = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  text-align: center;\n`;\n\nexport const ReviewsHeading = styled.h3`\n  text-align: center;\n  color: #54414e;\n`;\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin: 20px 0;\n`;\n\nexport const AuthorHeading = styled.h3`\n  text-align: center;\n  color: #54414e;\n`;\n\nexport const ContentParagraph = styled.p`\n  text-align: left;\n  color: #875c74;\n`;\n","import React from 'react';\n\nimport { useFetchFilmReviews } from 'components/helpers/useFetchFilmReviews';\n\nimport {\n  AuthorHeading,\n  ContentParagraph,\n  ReviewsContainer,\n  ReviewsHeading,\n  ReviewsItem,\n  ReviewsList,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const movieReviews = useFetchFilmReviews();\n  if (movieReviews.reviews.length === 0 || !movieReviews.reviews) {\n    return (\n      <p style={{ textAlign: 'center' }}>\n        There aren't any reviews for this movie\n      </p>\n    );\n  }\n\n  return (\n    <ReviewsContainer>\n      <ReviewsHeading>Rewievs</ReviewsHeading>\n      <ReviewsList>\n        {movieReviews.reviews.map(({ movieId, author, content }) => (\n          <ReviewsItem key={movieId}>\n            <AuthorHeading>{author}</AuthorHeading>\n            <ContentParagraph>{content}</ContentParagraph>\n          </ReviewsItem>\n        ))}\n      </ReviewsList>\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsInfo } from 'api/api';\n\nexport const useFetchFilmReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    if (!movieId) return;\n    const fetchMovieReviews = async () => {\n      try {\n        const { data } = await getReviewsInfo(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError('Try to reload the page');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return { reviews, error, loading };\n};\n"],"names":["API_KEY","axios","getAllMoviesList","async","concat","error","getMovieByQuery","query","getAllMoviesInfo","data","movieId","getCastInfo","getReviewsInfo","ReviewsContainer","styled","_templateObject","_taggedTemplateLiteral","ReviewsHeading","_templateObject2","ReviewsList","_templateObject3","ReviewsItem","_templateObject4","AuthorHeading","_templateObject5","ContentParagraph","_templateObject6","Reviews","movieReviews","useFetchFilmReviews","reviews","setReviews","useState","setError","loading","setLoading","useParams","useEffect","results","fetchMovieReviews","length","_jsxs","children","_jsx","map","_ref","author","content","style","textAlign"],"sourceRoot":""}