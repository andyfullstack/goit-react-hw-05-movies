{"version":3,"file":"static/js/810.bac43c85.chunk.js","mappings":"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","sources":["api/api.js","components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","components/Loader/Loader.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/helpers/useFetchByQuery.js","components/Pages/Films/Films.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '6737ef5101d688762393da727963265b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getAllMoviesList = async () => {\n  try {\n    const data = await axios(`/trending/all/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const data = await axios(\n      `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getAllMoviesInfo = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getCastInfo = async movieId => {\n  try {\n    const { data } = await axios(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getReviewsInfo = async movieId => {\n  try {\n    const data = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListContainer = styled.ul`\n  list-style: none;\n`;\n\nexport const MovieListItem = styled.li`\n  &:hover,\n  &:focus {\n    h4 {\n      color: #6c2ffc;\n      transition: color 0.3s ease-in-out;\n    }\n  }\n`;\n\nexport const MovieTitleLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.h4`\n  color: black;\n  margin: 10px;\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MovieListItem,\n  MovieTitle,\n  MovieTitleLink,\n  MoviesListContainer,\n} from './FilmList.styled';\n\nconst FilmList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListContainer>\n      {movies.map(\n        ({ id, title }) =>\n          title && (\n            <MovieListItem key={id}>\n              <MovieTitleLink to={`/movies/${id}`} state={{ from: location }}>\n                <MovieTitle>{title}</MovieTitle>\n              </MovieTitleLink>\n            </MovieListItem>\n          )\n      )}\n    </MoviesListContainer>\n  );\n};\n\nexport default FilmList;\n","import { Watch } from 'react-loader-spinner';\n\n// import PageLoader from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    // <PageLoader>\n    <Watch\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      radius=\"48\"\n      color=\"#3c2bd6\"\n      ariaLabel=\"watch-loading\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n      }}\n      wrapperClass=\"\"\n    />\n    // </PageLoader>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  gap: 15px;\n  margin-left: 25px;\n`;\n\nexport const StyledInput = styled.input`\n  border-radius: 4px;\n`;\n\nexport const StyledButton = styled.button`\n  border-radius: 4px;\n`;\n","import React, { useState } from 'react';\nimport { StyledButton, StyledForm, StyledInput } from './SearchForm.styled';\n\nconst SearchForm = ({ handleSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    handleSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <StyledForm onSubmit={onHandleSubmit}>\n      <StyledInput\n        name=\"movie\"\n        required\n        value={query}\n        onChange={handleChange}\n      />\n      <StyledButton type=\"submit\">Search Film</StyledButton>\n    </StyledForm>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'api/api';\n\nconst useFetchByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    setLoading(true);\n    if (!query) return;\n    const fetchResponse = async () => {\n      try {\n        const { data } = await getMovieByQuery(query);\n        setMovies(data.results);\n      } catch (error) {\n        setError('Try to reload the page');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchResponse();\n  }, [query]);\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return { movies, error, loading, handleSubmit };\n};\n\nexport default useFetchByQuery;\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/FilmList/FilmList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport useFetchByQuery from 'components/helpers/useFetchByQuery';\n\nconst Films = () => {\n  const { movies, error, isLoading, handleSubmit } = useFetchByQuery();\n  return (\n    <>\n      <SearchForm handleSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      {error && <h3>Try to reload the page</h3>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Films;\n"],"names":["API_KEY","axios","getAllMoviesList","async","concat","error","getMovieByQuery","query","getAllMoviesInfo","data","movieId","getCastInfo","getReviewsInfo","MoviesListContainer","styled","_templateObject","_taggedTemplateLiteral","MovieListItem","_templateObject2","MovieTitleLink","Link","_templateObject3","MovieTitle","_templateObject4","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","to","state","from","Loader","Watch","visible","height","width","radius","color","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","StyledForm","StyledInput","StyledButton","handleSubmit","setQuery","useState","_jsxs","onSubmit","e","preventDefault","name","required","value","onChange","target","type","useFetchByQuery","setMovies","setError","loading","setLoading","searchParams","setSearchParams","useSearchParams","get","useEffect","results","fetchResponse","Films","isLoading","_Fragment","SearchForm","length","MoviesList"],"sourceRoot":""}